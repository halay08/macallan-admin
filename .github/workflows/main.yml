name: CI/CD

# How to
# Run `firebase login:ci` Then copy your token.
# Open GitHub repository and go to Settings, then Secrets. Add your secret and name it FIREBASE_TOKEN.

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - staging
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-develop:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        run: |
          yarn --pure-lockfile
          yarn build:develop

      - name: Activate Develop Project
        uses: w9jds/firebase-action@master
        with:
          args: use develop
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to Develop
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:${{secrets.SITE}} --token ${{ secrets.FIREBASE_TOKEN }} --force --project develop
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        run: |
          yarn --pure-lockfile
          yarn build:staging

      - name: Activate Staging Project
        uses: w9jds/firebase-action@master
        with:
          args: use staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to staging
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:${{secrets.SITE}} --token ${{ secrets.FIREBASE_TOKEN }} --force --project staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build
        run: |
          yarn --pure-lockfile
          yarn build:production

      - name: Activate Production Project
        uses: w9jds/firebase-action@master
        with:
          args: use production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy to production
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:${{secrets.SITE}} --token ${{ secrets.FIREBASE_TOKEN }} --force --project production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
